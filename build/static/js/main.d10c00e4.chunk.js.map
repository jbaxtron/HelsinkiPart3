{"version":3,"sources":["services/person.js","App.js","index.js"],"names":["url","getFullList","axios","get","then","response","data","addition","post","event","pid","target","value","delete","newObject","put","Filter","readFilter","onChange","PersonForm","addName","readInput","readPhone","onSubmit","type","Directory","delPerson","persons","newFilter","fp","filter","person1","name","toLowerCase","includes","map","number","personId","id","DelButton","onClick","Message","message","className","App","useState","setPersons","newName","setNewName","newPhone","setNewPhone","setNewFilter","setMessage","useEffect","personService","console","log","JSON","stringify","preventDefault","checker","checkerP","window","alert","personToUpd","find","person","confirm","returnedPerson","catch","setTimeout","concat","returned","found","pName","arrayMinus","x","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d10c00e4.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport react from 'react'\r\n\r\n\r\nconst url = '/api/persons'\r\n\r\nconst getFullList = () => {\r\n    const request = axios.get(`${url}`);\r\n    return request.then(response => response.data)\r\n      \r\n}\r\n\r\nconst addToList = (addition) => {\r\n    const request = axios.post(`${url}`, addition)\r\n    return request.then(response =>response.data)\r\n}\r\n\r\nconst deleteFromList = (event) => {\r\n\r\n    const pid = event.target.value\r\n    \r\n    const request = axios.delete(`${url}/${pid}`)\r\n    return request.then(getFullList())\r\n}\r\n\r\nconst updatePerson = (pid, newObject) => {\r\n    //const pid = event.target.value\r\n    const request = axios.put(`${url}/${pid}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getFullList, addToList, deleteFromList, updatePerson }","import axios from 'axios'\nimport React, { useState, useEffect } from 'react'\nimport person from './services/person.js'\nimport personService from './services/person.js'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newPhone, setNewPhone] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [message, setMessage] = useState(null)\n  const updater = () => {\n    personService\n      .getFullList()\n      .then(response => {\n        setPersons(response)\n        console.log(persons)\n      })\n  }\n\n\n\n  const addName = (event) => {\n    event.preventDefault()\n    console.log('button clicked', event.target)\n    const checker = persons.map(persons => persons.name)\n    const checkerP = persons.map(persons => persons.number)\n    const addition = { name: newName, number: newPhone }\n\n    if (newName == '' || newPhone === '') {\n      return;\n    }\n\n    else if (checker.includes(newName) && checkerP.includes(newPhone)) {\n      window.alert(`${newName} is already added to the phonebook`)\n\n      return;\n    } else if (checker.includes(newName) && !checkerP.includes(newPhone)) {\n      const personToUpd = persons.find(person => person.name === newName)\n      console.log('Name: ', personToUpd.name)\n      const newObject = { ...personToUpd, number: newPhone }\n      console.log(`New Object: ${newObject}`)\n      const pid = personToUpd.id\n\n      if (window.confirm(`${newObject.name}, is already in the phone book, update number?`)) {\n        personService\n          .updatePerson(pid, newObject)\n          .then(returnedPerson =>\n            setPersons(persons.map(person1 => person1.id !== personToUpd.id ? person1 : returnedPerson))\n          )\n          .catch(() => {\n            setMessage(`${newObject.name} has already been deleted from the PhoneBook`);\n            setTimeout(() => {\n              setMessage(null)\n            }, 5000)\n          })\n\n\n        setMessage(`${newPhone} has been added to the PhoneBook`)\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)\n        setNewName('')\n        setNewPhone('')\n      }\n    } else {\n\n      setPersons(persons.concat([{ name: newName, number: newPhone }]))\n\n      personService\n        .addToList(addition)\n        .then(returned => {\n          setPersons(persons.concat(returned))\n        })\n\n      setMessage(`${newName} has been added to the PhoneBook`)\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n      setNewName('')\n      setNewPhone('')\n\n    }\n  }\n\n  const readInput = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const readPhone = (event) => {\n    setNewPhone(event.target.value)\n  }\n\n  const readFilter = (event) => {\n    setNewFilter(event.target.value)\n\n\n  }\n\n  const delPerson = (event) => {\n    const pid = event.target.value\n    console.log(\"PID :\", pid)\n    console.log(`Persons: ${persons}`)\n\n\n    //This line gave me grief --v If the \"return\" is INSIDE the .find function it works, calling it on \"found\" as a function outside the function DOES NOT work. \n    const found = persons.find(person1 => { return person1.id == pid });\n    console.log(found)\n    const pName = found.name;\n    console.log(pName)\n\n\n\n\n    if (window.confirm(`Are you sure you want to delete ${pName} ?`)) {\n\n      const arrayMinus = persons.filter(x => x !== found)\n\n      personService\n        .deleteFromList(event)\n        .then(setPersons(arrayMinus))\n\n    }\n\n  }\n\n  useEffect(() => {\n    updater()\n\n  }, [JSON.stringify(personService.getFullList)])\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Message message={message} />\n      <Filter readFilter={readFilter} />\n      <h2>Add a new</h2>\n      <PersonForm addName={addName} readInput={readInput} readPhone={readPhone} />\n      <h2>Numbers</h2>\n      <Directory delPerson={delPerson} persons={persons} newFilter={newFilter} />\n\n\n    </div>\n  )\n}\n\nconst Filter = ({ readFilter }) => {\n  return (\n    <div>\n      filter shown with <input onChange={readFilter} />\n    </div>\n  )\n}\n\nconst PersonForm = ({ addName, readInput, readPhone }) => {\n\n  return (\n    <form onSubmit={addName}>\n      <table>\n        <tbody>\n          <tr>\n            <td>Name:</td><td><input onChange={readInput} /></td>\n          </tr>\n          <tr>\n            <td>Number:</td><td><input onChange={readPhone} /></td>\n          </tr>\n          <tr>\n            <td><button type=\"submit\">add</button></td>\n          </tr>\n        </tbody>\n      </table>\n    </form>\n  )\n\n}\n\n\nconst Directory = ({ delPerson, persons, newFilter }) => {\n\n  const fp = persons.filter(person1 => person1.name.toLowerCase().includes(newFilter.toLowerCase()))\n\n  if (!newFilter === '') {\n    return (\n      <div>\n\n        {persons.map(person1 => <p key={person1.id}>{person1.name} {person1.number}\n          <DelButton key={person1.id} delPerson={delPerson} key={person1.id} personId={person1.id} /></p>)}\n      </div>\n    )\n\n  }\n  else {\n    return (\n      <div>\n        {fp.map(person1 => <p key={person1.id}>{person1.name} {person1.number}\n          <DelButton key={person1.id} delPerson={delPerson} key={person1.id} personId={person1.id} /></p>\n        )}\n      </div>\n    )\n  }\n}\n\nconst DelButton = ({ delPerson, personId }) => {\n\n\n  return (\n    <button value={personId} onClick={delPerson}>Delete</button>\n\n  )\n}\n\nconst Message = ({ message }) => {\n  if ((message === null)) {\n    return null\n  } else {\n    return (\n      <div className='Message'>\n        {message}\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n \n    <App />,\n \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}